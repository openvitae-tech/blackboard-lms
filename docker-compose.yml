version: "3"
services:
  web:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PORT=3000
      - RAILS_ENV=docker
      - RAILS_MASTER_KEY=dee4823f10cb1f3cc02c610f33eab947
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail localhost:3000/up || exit 1"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  worker:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - RAILS_MASTER_KEY=dee4823f10cb1f3cc02c610f33eab947
    command: ["./bin/bundle", "exec", "sidekiq", "-c 5"]
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "ps ax | grep -v grep | grep sidekiq > /dev/null"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
  db:
    image: postgres:15.4-bookworm
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blackboard_docker
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres -d blackboard_docker"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
  cache:
    image: redis:7.2.6-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "redis-cli", "--raw", "incr", "ping"
        ]